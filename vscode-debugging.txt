Using Debugger for Chrome plugin:

==> install Debugger for Chrome plugin

=========================== should be using following, NO need to change karma.conf.js

==> .vscode/launch.json, created by vscode ::> Debug view ::> left upper, Open launch.json,
sample as below, one is for debugging unit test, while the other one is for debugging the running
"progressing" application 

{
    "type": "chrome",
    "request": "launch",
    "name": "Launch Chrome, progressing unit test",
    "url": "http://localhost:9876/debug.html",
    "webRoot": "${workspaceFolder}"
},
{
    "type": "chrome",
    "request": "launch",
    "name": "Launch Chrome, debugging progressing",
    "url": "http://localhost:4200/",
    "sourceMaps": true,
    "trace": true,
    "webRoot": "${workspaceRoot}/progressing/src",
    "userDataDir": "${workspaceRoot}/.vscode/chrome",
    "sourceMapPathOverrides": {
        "webpack:///C:*":"C:/*"
    }
}




=========================== following is another way, not as simple as above, more need to change karma.conf.js!

==> npm install -g karma-cli

karma start karma.conf.js --browsers Chrome

--> karma.conf.js
customLaunchers: {
      Chrome_with_debugging: {
        base: 'Chrome',
        flags: ['--remote-debugging-port=9222'],
        debug: true
      }
    }

karma start karma.conf.js --browsers Chrome_with_debugging


==> .vscode/launch.json, created by vscode ::> Debug view ::> left upper, Open launch.json

see launch.json.progressing.sample

==> Run debug, select by name, e.g, "Attach to Chrome", there will be choices to choose
to attach, e.g, karma, localhost:9876/?... or localhost:9876/debug.html, select the debug.html one.

==> Then in Chrome, refresh the debug.html page, breakpoint will be hit.




--> ERROR: breakpoint ignored because generated code is not found

make sure the "webRoot" is configured correctly! example:
"webRoot": "${workspaceFolder}/progressing/src"




